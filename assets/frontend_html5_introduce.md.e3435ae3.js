import{_ as a,c as e,o as t,R as o}from"./chunks/framework.efe0f0ba.js";const b=JSON.parse('{"title":"HTML5 介绍","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/html5/introduce.md","filePath":"frontend/html5/introduce.md","lastUpdated":null}'),l={name:"frontend/html5/introduce.md"},s=o(`<h1 id="html5-介绍" tabindex="-1">HTML5 介绍 <a class="header-anchor" href="#html5-介绍" aria-label="Permalink to &quot;HTML5 介绍&quot;">​</a></h1><h2 id="什么是-html5" tabindex="-1">什么是 HTML5 ？ <a class="header-anchor" href="#什么是-html5" aria-label="Permalink to &quot;什么是 HTML5 ？&quot;">​</a></h2><p>HTML5 将成为 HTML 、XHTML 以及 HTML DOM 的新标准，HTML5 是公认的下一代 Web 语言。按目前的情况可以直接理解为 HTML5 就是 HTML 的升级版。针对于以前的不足，新增特性主要是增加了一些新的标签、新的表单和新的表单属性等。这些新特性都有兼容性问题，基本是 IE9+ 以上版本的浏览器才支持，如果不考虑兼容性问题，可以大量使用这些新特性。</p><h2 id="html-和-html5-有什么区别" tabindex="-1">HTML 和 HTML5 有什么区别 ？ <a class="header-anchor" href="#html-和-html5-有什么区别" aria-label="Permalink to &quot;HTML 和 HTML5 有什么区别 ？&quot;">​</a></h2><h3 id="文档类型声明" tabindex="-1">文档类型声明 <a class="header-anchor" href="#文档类型声明" aria-label="Permalink to &quot;文档类型声明&quot;">​</a></h3><p>HTML 的文档类型声明太长而且复杂，而 HTML5 的文档声明相对来说更为简便，有利于程序员快速阅读和开发。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- html --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">PUBLIC</span><span style="color:#89DDFF;"> </span><span style="color:#C3E88D;">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C3E88D;">&quot;http://www.w3333.org/TR/html4/ stric t.dtd&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- html5 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="音频和视频的支持" tabindex="-1">音频和视频的支持 <a class="header-anchor" href="#音频和视频的支持" aria-label="Permalink to &quot;音频和视频的支持&quot;">​</a></h3><p>HTML 如果不使用 Flash 播放器它是不支持音频和视频。 HTML5 使用 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 标签来支持音频和视频控制。</p><h3 id="图形的支持" tabindex="-1">图形的支持 <a class="header-anchor" href="#图形的支持" aria-label="Permalink to &quot;图形的支持&quot;">​</a></h3><p>新增了绘图标签 <code>&lt;svg&gt;</code> <code>&lt;canvas&gt;</code>。</p><h3 id="新增了语义化标签" tabindex="-1">新增了语义化标签 <a class="header-anchor" href="#新增了语义化标签" aria-label="Permalink to &quot;新增了语义化标签&quot;">​</a></h3><p><code>&lt;main&gt;</code> <code>&lt;header&gt;</code> <code>&lt;nav&gt;</code> <code>&lt;article&gt;</code> <code>&lt;section&gt;</code> <code>&lt;aside&gt;</code> <code>&lt;footer&gt;</code> <code>&lt;time&gt;</code></p><h3 id="移除了一部分标签" tabindex="-1">移除了一部分标签 <a class="header-anchor" href="#移除了一部分标签" aria-label="Permalink to &quot;移除了一部分标签&quot;">​</a></h3><p><code>&lt;font&gt;</code> <code>&lt;center&gt;</code> <code>&lt;u&gt;</code> <code>&lt;big&gt;</code> <code>&lt;strike&gt;</code> <code>&lt;tt&gt;</code></p><h3 id="新增了会话存储和本地存储" tabindex="-1">新增了会话存储和本地存储 <a class="header-anchor" href="#新增了会话存储和本地存储" aria-label="Permalink to &quot;新增了会话存储和本地存储&quot;">​</a></h3><p><code>localStorage</code> 和 <code>sessionStorage</code></p>`,17),n=[s];function c(r,d,p,i,h,m){return t(),e("div",null,n)}const g=a(l,[["render",c]]);export{b as __pageData,g as default};
