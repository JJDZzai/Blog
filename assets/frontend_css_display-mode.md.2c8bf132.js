import{_ as s,c as a,o as e,R as n}from"./chunks/framework.efe0f0ba.js";const b=JSON.parse('{"title":"元素显示模式","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/css/display-mode.md","filePath":"frontend/css/display-mode.md","lastUpdated":null}'),l={name:"frontend/css/display-mode.md"},o=n(`<h1 id="元素显示模式" tabindex="-1">元素显示模式 <a class="header-anchor" href="#元素显示模式" aria-label="Permalink to &quot;元素显示模式&quot;">​</a></h1><p>元素显示模式就是元素（标签）以什么方式进行显示，比如 <code>&lt;div&gt;</code> 自己占一行，比如一行可以放多个 <code>&lt;span&gt;</code> 标签，一般分为块元素和行内元素两种类型。</p><h2 id="块元素" tabindex="-1">块元素 <a class="header-anchor" href="#块元素" aria-label="Permalink to &quot;块元素&quot;">​</a></h2><p><strong>常见的块元素：</strong></p><p><code>&lt;h1&gt;~&lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>、<code>&lt;dl&gt;</code>、<code>&lt;dt&gt;</code>、<code>&lt;dd&gt;</code>等，其中 <code>&lt;div&gt;</code> 标签是最典型的块元素。</p><p><strong>块级元素的特点：</strong></p><p>① 独占一行</p><p>② 高度，宽度、外边距以及内边距都可以控制</p><p>③ 宽度默认是容器（父级宽度）的100%</p><p>④ 是一个容器及盒子，里面可以放行内或者块级元素</p><p><strong>注意：</strong></p><ul><li>文字类的元素内不能使用块级元素</li><li>p 标签主要用于存放文字、因此 p 里面不能放块级元素，特别是不能放 div</li><li>同理， h1-h6 标签等都是文字类块级标签，里面也不能放其他块级元素</li></ul><h2 id="行内元素" tabindex="-1">行内元素 <a class="header-anchor" href="#行内元素" aria-label="Permalink to &quot;行内元素&quot;">​</a></h2><p><strong>常见的行内元素：</strong></p><p><code>&lt;a&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;b&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;i&gt;</code>、<code>&lt;del&gt;</code>、<code>&lt;s&gt;</code>、<code>&lt;ins&gt;</code>、<code>&lt;u&gt;</code>、<code>&lt;span&gt;</code>等，其中 <code>&lt;span&gt;</code> 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><p>① 相邻行内元素在一行上，一行可以显示多个</p><p>② 高、宽直接设置是无效的</p><p>③ 默认宽度就是它本身内容的宽</p><p>④ 行内元素只能容纳文本或其他行内元素</p><p><strong>注意：</strong></p><p>链接里面不能再放链接，特殊情况链接 <code> &lt;a&gt;</code> 里面可以放块级元素，但是给 <code> &lt;a&gt;</code> 转换一下块级模式最安全。</p><h2 id="行内块元素" tabindex="-1">行内块元素 <a class="header-anchor" href="#行内块元素" aria-label="Permalink to &quot;行内块元素&quot;">​</a></h2><p><strong>常见的行内元素：</strong></p><p><code>&lt;img /&gt;</code>、<code>&lt;input /&gt;</code>、<code>&lt;td&gt;</code>，它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。</p><p><strong>行内块元素的特点：</strong></p><p>① 和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）</p><p>② 默认宽度就是它本身内容的宽度（行内元素特点）</p><p>③ 宽度，高度，行高、外边距以及内边距都可以控制（块级元素特点）</p><h2 id="元素显示模式转换" tabindex="-1">元素显示模式转换 <a class="header-anchor" href="#元素显示模式转换" aria-label="Permalink to &quot;元素显示模式转换&quot;">​</a></h2><p>特殊情况下需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性，比如想要增加 a 链接的触发范围。</p><ul><li>转换为块元素：</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>转换为行内元素：</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>转换为行内块：</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">span</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,37),p=[o];function t(c,d,r,i,g,u){return e(),a("div",null,p)}const m=s(l,[["render",t]]);export{b as __pageData,m as default};
